version: "3.8"

services:
  nginx:
    container_name: "nginx"
    image: nginx:1.23-alpine
    restart: always
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/privkey.pem:/etc/nginx/privkey.pem
      - ./docker/nginx/cert.pem:/etc/nginx/cert.pem
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      - server
    networks:
      - app-network

  db:
    container_name: "db"
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    networks:
      - app-network

  server:
    container_name: "server"
    restart: always
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    entrypoint: /app/docker/server-entrypoint.sh
    volumes:
      - .:/app
    environment:
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - db
    networks:
      - app-network

volumes:
  postgres_data: { }

networks:
  app-network:
    driver: bridge